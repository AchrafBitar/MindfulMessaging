var w=Object.defineProperty;var I=(m,e,t)=>e in m?w(m,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):m[e]=t;var y=(m,e,t)=>I(m,typeof e!="symbol"?e+"":e,t);class x{constructor(){y(this,"apiKey",null);y(this,"baseUrl","https://api-inference.huggingface.co/models");this.loadApiKey()}async loadApiKey(){try{const e=await chrome.storage.local.get(["huggingface_api_key"]);this.apiKey=e.huggingface_api_key||null}catch(e){console.warn("Failed to load API key:",e)}}async setApiKey(e){this.apiKey=e,await chrome.storage.local.set({huggingface_api_key:e})}async analyzeText(e){if(!this.apiKey)throw new Error("Hugging Face API key not configured");try{const[t,s,a]=await Promise.all([this.analyzeSentiment(e),this.extractEntities(e),this.detectIntent(e)]),n=this.extractInsights(e,t,s,a),i=await this.generateAIContextualReplies(e,t,a);return{id:this.generateId(),originalText:e,insights:n,suggestedReplies:i}}catch(t){return console.error("AI analysis failed:",t),this.fallbackAnalysis(e)}}async analyzeSentiment(e){return await this.callHuggingFaceAPI("cardiffnlp/twitter-roberta-base-sentiment-latest",e)}async extractEntities(e){return await this.callHuggingFaceAPI("dslim/bert-base-NER",e)}async detectIntent(e){const t=["question","request","statement","complaint","appreciation","deadline","meeting","task","urgent","problem","apology","greeting"];return await this.callHuggingFaceAPI("facebook/bart-large-mnli",e,{candidate_labels:t})}async generateAIContextualReplies(e,t,s){try{const a=this.createContextualPrompt(e,t,s),i=(await this.callHuggingFaceAPI("microsoft/DialoGPT-medium",a,{max_length:150,temperature:.7,do_sample:!0,top_p:.9})).generated_text;return this.parseGeneratedReplies(i,e,t,s).slice(0,3)}catch(a){return console.log("AI reply generation failed, using fallback:",a),this.generateFallbackReplies(e)}}createContextualPrompt(e,t,s){var r;const a=t.find(o=>o.label==="POSITIVE"),n=t.find(o=>o.label==="NEGATIVE"),i=((r=s[0])==null?void 0:r.label)||"statement";let c="",h="neutral";return n&&n.score>.6?(c="empathetic and supportive",h="warm"):a&&a.score>.6?(c="enthusiastic and appreciative",h="warm"):i==="urgent"||i==="deadline"?(c="professional and efficient",h="firm"):i==="question"?(c="helpful and informative",h="calm"):i==="complaint"?(c="understanding and solution-focused",h="calm"):i==="apology"&&(c="forgiving and understanding",h="warm"),`Generate 3 professional, ${c} email replies to this message: "${e}"

Requirements:
- Keep each reply under 100 words
- Use a ${h} tone
- Be specific to the message content
- Professional but friendly
- Include actionable responses when appropriate

Replies:`}parseGeneratedReplies(e,t,s,a){var d;const n=e.split(`
`).filter(u=>u.trim()),i=[],c=s.find(u=>u.label==="POSITIVE"),h=s.find(u=>u.label==="NEGATIVE"),r=((d=a[0])==null?void 0:d.label)||"statement";let o="calm";if(h&&h.score>.6||c&&c.score>.6?o="warm":(r==="urgent"||r==="deadline")&&(o="firm"),n.forEach(u=>{const l=u.replace(/^\d+\.\s*/,"").trim();l&&l.length>10&&l.length<200&&i.push({text:l,tone:o})}),i.length<3){const u=this.generateContextualReplies(t,s,a);i.push(...u.slice(0,3-i.length))}return i}generateContextualReplies(e,t,s){var r;const a=[],n=e.toLowerCase(),i=((r=s[0])==null?void 0:r.label)||"statement",c=t.find(o=>o.label==="POSITIVE"),h=t.find(o=>o.label==="NEGATIVE");if(i==="question"&&a.push({text:"That's an excellent question! Let me research this and provide you with a comprehensive answer by the end of the day.",tone:"calm"},{text:"Great question! I'll look into this right away and get back to you with detailed information.",tone:"warm"}),(i==="urgent"||i==="deadline")&&a.push({text:"I understand this is time-sensitive. I'll prioritize this immediately and have it completed by the deadline.",tone:"firm"},{text:"Got it - this is urgent. I'm on it right now and will update you on progress within the hour.",tone:"firm"}),i==="complaint"&&a.push({text:"I sincerely apologize for the inconvenience. Let me address this issue immediately and ensure it's resolved to your satisfaction.",tone:"calm"},{text:"I understand your frustration, and I'm here to help resolve this. Let me take care of this right away.",tone:"warm"}),i==="appreciation"&&a.push({text:"Thank you so much for your kind words! I'm really glad I could help, and I appreciate you taking the time to let me know.",tone:"warm"},{text:"That means a lot to me! I'm happy to have been of assistance, and I'm here whenever you need help in the future.",tone:"warm"}),i==="apology"&&a.push({text:"No worries at all! I completely understand, and there's no need to apologize. These things happen.",tone:"warm"},{text:"Absolutely no problem! I appreciate you letting me know, and I'm happy to work around this.",tone:"warm"}),h&&h.score>.6&&a.push({text:"I can see this is concerning for you. Let me help resolve this situation and make sure you're satisfied with the outcome.",tone:"warm"}),c&&c.score>.6&&a.push({text:"I'm so glad this is working well for you! Your positive feedback really motivates me to keep delivering great results.",tone:"warm"}),n.includes("meeting")&&a.push({text:"Perfect! I'll make sure to prepare thoroughly for our meeting and bring all the relevant information we'll need.",tone:"warm"}),(n.includes("project")||n.includes("work"))&&a.push({text:"I'm excited to work on this project with you! Let me know if you need any specific details or have particular requirements.",tone:"warm"}),(n.includes("help")||n.includes("assist"))&&a.push({text:"I'm here to help! What specific assistance do you need? I'm ready to support you in any way I can.",tone:"warm"}),a.length<3){const o=[{text:"Thank you for reaching out! I'll review this carefully and get back to you with a thoughtful response.",tone:"calm"},{text:"I appreciate you sharing this with me. Let me process this information and respond appropriately.",tone:"calm"},{text:"Thanks for the message! I'll look into this and provide you with a comprehensive response.",tone:"warm"}];a.push(...o.slice(0,3-a.length))}return a.slice(0,3)}async callHuggingFaceAPI(e,t,s){const a=`${this.baseUrl}/${e}`,n={Authorization:`Bearer ${this.apiKey}`,"Content-Type":"application/json"},i={inputs:t};s&&(i.parameters=s);const c=await fetch(a,{method:"POST",headers:n,body:JSON.stringify(i)});if(!c.ok)throw new Error(`Hugging Face API error: ${c.statusText}`);return await c.json()}extractInsights(e,t,s,a){const n={tasks:[],dates:[],people:[],places:[],questions:[],risks:[]};a.filter(l=>["request","task","deadline","meeting"].includes(l.label)&&l.score>.5).forEach(l=>{n.tasks.push({text:`Action required: ${l.label}`,confidence:l.score})}),s.filter(l=>l.entity_group==="PER").forEach(l=>{n.people.push({text:l.word,type:"PERSON",confidence:l.score})}),s.filter(l=>l.entity_group==="LOC").forEach(l=>{n.places.push({text:l.word,type:"LOC",confidence:l.score})}),[{pattern:/\b\d{1,2}\/\d{1,2}\/\d{2,4}\b/g,type:"DATE"},{pattern:/\b\d{1,2}-\d{1,2}-\d{2,4}\b/g,type:"DATE"},{pattern:/\b(today|tomorrow|next week|next month)\b/gi,type:"DATE"},{pattern:/\b\d{1,2}:\d{2}\s*(am|pm)?\b/gi,type:"TIME"}].forEach(({pattern:l,type:p})=>{const g=e.match(l);g&&g.forEach(f=>n.dates.push({text:f,type:p,confidence:.9}))}),e.split(/[.!?]+/).forEach(l=>{const p=l.trim();(p.includes("?")||p.toLowerCase().startsWith("what")||p.toLowerCase().startsWith("how")||p.toLowerCase().startsWith("why")||p.toLowerCase().startsWith("when")||p.toLowerCase().startsWith("where")||p.toLowerCase().startsWith("can you")||p.toLowerCase().startsWith("could you"))&&n.questions.push(p)});const d=t.find(l=>l.label==="NEGATIVE"),u=["urgent","emergency","problem","issue","conflict","deadline"];return d&&d.score>.6&&n.risks.push({type:"commitment_conflict",confidence:d.score,note:`Negative sentiment detected (${Math.round(d.score*100)}% confidence) - may need attention`}),u.forEach(l=>{e.toLowerCase().includes(l)&&n.risks.push({type:"commitment_conflict",confidence:.7,note:`Contains "${l}" - may need attention`})}),n}generateFallbackReplies(e){const t=[],s=e.toLowerCase();if(s.includes("?")){const n=[{text:"That's a great question! Let me look into this and get back to you.",tone:"calm"},{text:"Good question! I'll find out and let you know.",tone:"warm"},{text:"I'll research this and provide you with an answer.",tone:"calm"}];t.push(...n.slice(0,2))}if((s.includes("urgent")||s.includes("emergency"))&&t.push({text:"I understand this is urgent. I'll prioritize this immediately.",tone:"firm"}),(s.includes("problem")||s.includes("issue"))&&t.push({text:"I see there's an issue. Let me help you resolve this.",tone:"calm"}),(s.includes("thank")||s.includes("thanks"))&&t.push({text:"You're very welcome! I'm here to help.",tone:"warm"}),(s.includes("sorry")||s.includes("apologize"))&&t.push({text:"No worries at all! I understand completely.",tone:"warm"}),(s.includes("help")||s.includes("assist"))&&t.push({text:"I'm here to help! What can I assist you with?",tone:"warm"}),(s.includes("meeting")||s.includes("call"))&&t.push({text:"I'll be there for the meeting. Looking forward to it!",tone:"warm"}),(s.includes("deadline")||s.includes("due"))&&t.push({text:"I understand the deadline. I'll make sure this is completed on time.",tone:"firm"}),t.length<2){const i=[{text:"Thank you for sharing this. I'll review it and get back to you soon.",tone:"calm"},{text:"Got it! I'll look into this and let you know what I find.",tone:"warm"},{text:"I understand. Let me process this and respond appropriately.",tone:"calm"},{text:"Thanks for reaching out! I'll get back to you shortly.",tone:"warm"},{text:"I'll review this and provide you with a thoughtful response.",tone:"calm"},{text:"Got your message! I'll respond as soon as I can.",tone:"warm"}].sort(()=>.5-Math.random());t.push(...i.slice(0,2))}return t.filter((n,i,c)=>i===c.findIndex(h=>h.text===n.text)).slice(0,3)}fallbackAnalysis(e){const t={tasks:[],dates:[],people:[],places:[],questions:[],risks:[]},s=e.toLowerCase(),a=["need to","have to","should","must","task","todo","urgent","deadline","meeting"],n=e.split(/[.!?]+/);n.forEach(r=>{const o=r.toLowerCase();a.some(d=>o.includes(d))&&t.tasks.push({text:r.trim(),confidence:.6})}),[{pattern:/\b\d{1,2}\/\d{1,2}\/\d{2,4}\b/g,type:"DATE"},{pattern:/\b(today|tomorrow|next week|next month|monday|tuesday|wednesday|thursday|friday|saturday|sunday)\b/gi,type:"DATE"},{pattern:/\b\d{1,2}:\d{2}\s*(am|pm)?\b/gi,type:"TIME"}].forEach(({pattern:r,type:o})=>{const d=e.match(r);d&&d.forEach(u=>t.dates.push({text:u,type:o,confidence:.8}))}),n.forEach(r=>{const o=r.trim();(o.includes("?")||o.toLowerCase().startsWith("what")||o.toLowerCase().startsWith("how")||o.toLowerCase().startsWith("why")||o.toLowerCase().startsWith("when")||o.toLowerCase().startsWith("where")||o.toLowerCase().startsWith("can you")||o.toLowerCase().startsWith("could you")||o.toLowerCase().startsWith("would you"))&&t.questions.push(o)}),["urgent","emergency","problem","issue","conflict","deadline","stress","overwhelm"].forEach(r=>{s.includes(r)&&t.risks.push({type:"commitment_conflict",confidence:.7,note:`Contains "${r}" - may need attention`})});const h=this.generateFallbackReplies(e);return{id:this.generateId(),originalText:e,insights:t,suggestedReplies:h}}generateId(){return`analysis_${Date.now()}_${Math.random().toString(36).substr(2,9)}`}async testConnection(){try{return await this.analyzeSentiment("Hello world"),!0}catch(e){return console.error("AI service connection test failed:",e),!1}}}const k=new x;class b{constructor(){y(this,"messageContexts",new Map);y(this,"isAnalyzing",!1);this.setupMessageListeners(),this.setupContextMenu()}setupMessageListeners(){chrome.runtime.onMessage.addListener((e,t,s)=>{var a;switch(e.type){case"ANALYZE_TEXT":this.handleAnalyzeText(e.payload,(a=t.tab)==null?void 0:a.id);break;case"GET_ANALYSIS":this.handleGetAnalysis(e.payload);break;case"GET_CONTEXTS":return this.handleGetContexts(s),!0;case"CLEAR_CONTEXT":this.handleClearContext(e.payload);break}})}setupContextMenu(){chrome.contextMenus.removeAll(()=>{chrome.contextMenus.create({id:"analyze-selection",title:"Analyze with Mindful",contexts:["selection"]},()=>{chrome.runtime.lastError&&console.log("Context menu creation error:",chrome.runtime.lastError)})}),chrome.contextMenus.onClicked.addListener((e,t)=>{e.menuItemId==="analyze-selection"&&e.selectionText&&this.handleAnalyzeText(e.selectionText,t==null?void 0:t.id)})}async handleAnalyzeText(e,t){if(this.isAnalyzing){console.log("Analysis already in progress...");return}this.isAnalyzing=!0;const s=this.generateContextId(),a={id:s,text:e,source:t?`tab-${t}`:"manual",timestamp:Date.now()};this.messageContexts.set(s,a);try{if(t)try{await chrome.tabs.sendMessage(t,{type:"ANALYZE_TEXT",payload:{text:e,contextId:s}})}catch(i){console.log("Content script not available or not ready:",i)}const n=await this.performAnalysis(e);a.analysis=n,this.messageContexts.set(s,a),this.notifyPopup("ANALYSIS_COMPLETE",{contextId:s,analysis:n}),this.openPopup()}catch(n){console.error("Analysis failed:",n);const i=n instanceof Error?n.message:"Unknown error";this.notifyPopup("ANALYSIS_ERROR",{contextId:s,error:i})}finally{this.isAnalyzing=!1}}async performAnalysis(e){try{return await k.analyzeText(e)}catch(t){return console.log("AI service failed, using fallback analysis:",t),this.fallbackAnalysis(e)}}fallbackAnalysis(e){const t={tasks:[],dates:[],people:[],places:[],questions:[],risks:[]},s=e.toLowerCase(),a=["need to","have to","should","must","task","todo","urgent","deadline","meeting"],n=e.split(/[.!?]+/);n.forEach(r=>{const o=r.toLowerCase();a.some(d=>o.includes(d))&&t.tasks.push({text:r.trim(),confidence:.6})}),[{pattern:/\b\d{1,2}\/\d{1,2}\/\d{2,4}\b/g,type:"DATE"},{pattern:/\b(today|tomorrow|next week|next month|monday|tuesday|wednesday|thursday|friday|saturday|sunday)\b/gi,type:"DATE"},{pattern:/\b\d{1,2}:\d{2}\s*(am|pm)?\b/gi,type:"TIME"}].forEach(({pattern:r,type:o})=>{const d=e.match(r);d&&d.forEach(u=>t.dates.push({text:u,type:o,confidence:.8}))}),n.forEach(r=>{const o=r.trim();(o.includes("?")||o.toLowerCase().startsWith("what")||o.toLowerCase().startsWith("how")||o.toLowerCase().startsWith("why")||o.toLowerCase().startsWith("when")||o.toLowerCase().startsWith("where")||o.toLowerCase().startsWith("can you")||o.toLowerCase().startsWith("could you")||o.toLowerCase().startsWith("would you"))&&t.questions.push(o)}),["urgent","emergency","problem","issue","conflict","deadline","stress","overwhelm"].forEach(r=>{s.includes(r)&&t.risks.push({type:"commitment_conflict",confidence:.7,note:`Contains "${r}" - may need attention`})});const h=this.generateFallbackReplies(e);return{id:this.generateContextId(),originalText:e,insights:t,suggestedReplies:h}}generateFallbackReplies(e){const t=[],s=e.toLowerCase();if(s.includes("?")){const n=[{text:"That's a great question! Let me look into this and get back to you.",tone:"calm"},{text:"Good question! I'll find out and let you know.",tone:"warm"},{text:"I'll research this and provide you with an answer.",tone:"calm"}];t.push(...n.slice(0,2))}if((s.includes("urgent")||s.includes("emergency"))&&t.push({text:"I understand this is urgent. I'll prioritize this immediately.",tone:"firm"}),(s.includes("problem")||s.includes("issue"))&&t.push({text:"I see there's an issue. Let me help you resolve this.",tone:"calm"}),(s.includes("thank")||s.includes("thanks"))&&t.push({text:"You're very welcome! I'm here to help.",tone:"warm"}),(s.includes("sorry")||s.includes("apologize"))&&t.push({text:"No worries at all! I understand completely.",tone:"warm"}),(s.includes("help")||s.includes("assist"))&&t.push({text:"I'm here to help! What can I assist you with?",tone:"warm"}),(s.includes("meeting")||s.includes("call"))&&t.push({text:"I'll be there for the meeting. Looking forward to it!",tone:"warm"}),(s.includes("deadline")||s.includes("due"))&&t.push({text:"I understand the deadline. I'll make sure this is completed on time.",tone:"firm"}),t.length<2){const i=[{text:"Thank you for sharing this. I'll review it and get back to you soon.",tone:"calm"},{text:"Got it! I'll look into this and let you know what I find.",tone:"warm"},{text:"I understand. Let me process this and respond appropriately.",tone:"calm"},{text:"Thanks for reaching out! I'll get back to you shortly.",tone:"warm"},{text:"I'll review this and provide you with a thoughtful response.",tone:"calm"},{text:"Got your message! I'll respond as soon as I can.",tone:"warm"}].sort(()=>.5-Math.random());t.push(...i.slice(0,2))}return t.filter((n,i,c)=>i===c.findIndex(h=>h.text===n.text)).slice(0,3)}handleGetAnalysis(e){const t=this.messageContexts.get(e);return(t==null?void 0:t.analysis)||null}handleGetContexts(e){const t=Array.from(this.messageContexts.values());e({contexts:t})}handleClearContext(e){this.messageContexts.delete(e)}notifyPopup(e,t){try{chrome.runtime.sendMessage({type:e,payload:t}).catch(s=>{console.log("Popup not available:",s.message)})}catch(s){console.log("Failed to notify popup:",s)}}openPopup(){try{chrome.action.openPopup()}catch(e){console.log("Failed to open popup:",e);try{chrome.action.setPopup({popup:"popup.html"})}catch(t){console.log("Failed to set popup:",t)}}}generateContextId(){return`ctx_${Date.now()}_${Math.random().toString(36).substr(2,9)}`}}new b;
